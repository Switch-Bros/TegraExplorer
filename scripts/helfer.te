p=print
pl=println
pe={pause() exit()}
fse=fsexists
col=color
cls=clear
dlf=delfile
dld=deldir
cpf=copyfile
cpd=copydir
md=mkdir

wait={t=timer()while(timer()<(t+tw)){print()}}

if (fsexists("sd:/switch/prod.keys")) {
	fwstr={fw=maj.str()+"."+min.str()+"."+pat.str()}
	fv={a=readsave("bis:/save/8000000000000120")
	b=a.read("/meta/imkvdb.arc")
	c=["BYTE[]",9,8,0,0,0,0,0,1]
	d=b.find(c)
	if(d>0){
		e=b.slice(d+8,4).project()
		ver=(e[3]<<24)|(e[2]<<16)|(e[1]<<8)|(e[0])
		pat=((ver>>16)&((1<<4)- 1))
		min=((ver>>20)&((1<<6)- 1))
		maj=((ver>>26)&((1<<6)- 1))
	}.else(){p("Firmware nicht gefunden")pe()}
	a=0 fwstr()}
	if(mountsys("SYSTEM")){print("SYSTEM KONNTE NICHT EINGEBUNDEN WERDEN")pe()}
	fv()
}.else(){maj=0}

cls()
p("* Entferne Update Ordner")

dld("sd:/SwitchBros_BasisPaket")
dlf("sd:/switch/switchbros-updater/startup.te")
p()
p("Abgeschlossen")
wait(tw = 1000)

cls()
p("* Entferne alte Dateien")

deldir("sd:/atmosphere/hekate_kips");
deldir("sd:/bootloader/debug");
deldir("sd:/modules");

dld("sd:/atmosphere/contents/0100000000001000")
dld("sd:/atmosphere/contents/0100000000001007")
dld("sd:/atmosphere/contents/0100000000001013")
dld("sd:/atmosphere/contents/010000000000000D")
dld("sd:/atmosphere/contents/0100000000000032")
dld("sd:/atmosphere/contents/0100000000000034")
dld("sd:/atmosphere/contents/0100000000000036")
dld("sd:/atmosphere/contents/0100000000000037")
dld("sd:/atmosphere/contents/010000000000002b")
dld("sd:/atmosphere/contents/010000000000100D")
dld("sd:/atmosphere/contents/4200000000000010")
dld("sd:/atmosphere/contents/0100000000000008")
dld("sd:/atmosphere/contents/010000000000100B")
dld("sd:/atmosphere/contents/01FF415446660000")
dld("sd:/atmosphere/contents/00FF0012656180FF")
dld("sd:/atmosphere/contents/010000000000100C")
dld("sd:/sxos")
dld("sd:/switch/lithium");
dld("sd:/switch/FreshHay");
dld("sd:/switch/switch-cheats-updater");
dld("sd:/switch/nx-ntpc");
dld("sd:/switch/KosmosToolbox");
dld("sd:/switch/KosmosUpdater");
dld("sd:/switch/mercury");
dld("sd:/switch/LinkUser/");
dld("sd:/switch/nxmtp/");
dld("sd:/switch/incognito");
dld("sd:/switch/ChoiDujourNX");
dld("sd:/switch/switchbrosupdater")

if (maj != 4) {
	if (!fuse_patched()){
		dld("sd:/switch/fakenews-injector");
		dld("sd:/pegascape");
		dlf("sd:/bootloader/payloads/Incognito_RCM.bin");
	}

}.else(){
	dlf("sd:/boot.dat")
	dlf("sd:/boot.ini")
}

dlf("sd:/SwitchBros_NERD-O-MAT.bat")
dlf("sd:/SwitchBros_NOOB-O-MAT.bat")
dlf("sd:/switch/checkpoint.nro");
dlf("sd:/switch/checkpoint/checkpoint.nro");
dlf("sd:/switch/reboot_to_payload.nro");
dlf("sd:/switch/sx.nro");
dlf("sd:/switch/n1dus.nro");
dlf("sd:/switch/ChoiDujourNX.nro");
dlf("sd:/switch/ChoiDujourNX/ChoiDujourNX.nro");
dlf("sd:/switch/nx-ntpc.nro");
dlf("sd:/switch/dbi.nro");
dlf("sd:/switch/.DBI.nro.star");
dlf("sd:/switch/nxmtp.nro");
dlf("sd:/switch/incognito.nro");
dlf("sd:/switch/ultimate_updater.nro");
dlf("sd:/switch/zerotwoxci.nro");
dlf("sd:/switch/dOPUS.nro");
dlf("sd:/switch/tinfoil.nro");
dlf("sd:/switch/tinfoil_batch.nro");
dlf("sd:/switch/tinfoil_duckbill.nro");
dlf("sd:/switch/tinfoil_usb-fix.nro");
dlf("sd:/switch/ldnmitm_config.nro");
dlf("sd:/switch/fakenews-injector.nro");
dlf("sd:/switch/gag-order.nro");
dlf("sd:/switch/tinfoil/keys.txt");
dlf("sd:/switch/.overlays/emuiibo.ovl");

dlf("sd:/atmosphere/fusee-secondary_atmo.bin");
dlf("sd:/atmosphere/hbl_atmo.nsp");
dlf("sd:/atmosphere/fusee-secondary.bin.sig");
dlf("sd:/atmosphere/hbl.nsp.sig");
dlf("sd:/atmosphere/hbl.json");
dlf("sd:/atmosphere/BCT.ini");
dlf("sd:/atmosphere/system_settings.ini");
dlf("sd:/atmosphere/kips/fs_mitm.kip");
dlf("sd:/atmosphere/kips/ldn_mitm.kip");
dlf("sd:/atmosphere/kips/loader.kip");
dlf("sd:/atmosphere/kips/pm.kip");
dlf("sd:/atmosphere/kips/sm.kip");
dlf("sd:/atmosphere/kips/ams_mitm.kip");
dlf("sd:/atmosphere/flags/hbl_cal_read.flag");
dlf("sd:/atmosphere/exosphere.bin");
dlf("sd:/atmosphere/loader.ini");

dlf("sd:/bootloader/payloads/fusee-primary-payload.bin");
dlf("sd:/bootloader/payloads/biskeydump.bin");
dlf("sd:/bootloader/payloads/fusee-payload.bin");
dlf("sd:/bootloader/payloads/sxos.bin");
dlf("sd:/bootloader/payloads/rajnx_ipl.bin");
dlf("sd:/bootloader/ini/Atmosphere.ini");
dlf("sd:/bootloader/ini/atmosphere.ini");
dlf("sd:/bootloader/ini/sxos.ini");
dlf("sd:/bootloader/ini/hekate_keys.ini");
dlf("sd:/bootloader/ini/RajNX.ini");
dlf("sd:/bootloader/update.bin.sig");
dlf("sd:/bootloader/patches_template.ini");
dlf("sd:/bootloader/bootlogo.bmp");

dlf("sd:/games/hbgShop_forwarder_classic.nsp");
dlf("sd:/games/hbgShop_forwarder_dark_v3.nsp");
dlf("sd:/license-request.dat");
dlf("sd:/fusee-secondary.bin");
dlf("sd:/hekate_ctcaer_6.0.5.bin")
dlf("sd:/hekate_ctcaer_6.0.6.bin")
dlf("sd:/hekate_ctcaer_6.0.7.bin")
dlf("sd:/keys.dat");
dlf("sd:/BCT.ini");
dlf("sd:/hekate_ipl.ini");
dlf("sd:/exosphere.ini");
dlf("sd:/switch/switchbros-updater/cheats.zip");
dlf("sd:/switch/switchbros-updater/switchbros.zip");

p()
p("Abgeschlossen")
wait(tw = 1000)

cls()
p("* FixAttrib")
fixattrib()
p()
p("Abgeschlossen")

p("* Mac bezogenen quatsch entfernen")
removemacfolders()
p()
p("Abgeschlossen")

p("* sys-Module deaktivieren")
disablemodules()
p()
p("Abgeschlossen")
wait(tw = 1000)

dlf("sd:/payload.bin");
dlf("sd:/startup.te");
cpf("sd:/atmosphere/reboot_payload.bin", "sd:/payload.bin")
cpf("sd:/bootloader/hekate_ipl_.ini", "sd:/bootloader/hekate_ipl.ini")
dlf("sd:/bootloader/hekate_ipl_.ini");
dlf("sd:/bootloader/ini/switchbros_updater.ini")
dlf("sd:/bootloader/res/icon_SB_nobox.bmp")
dld("sd:/switch/kefirupdater/");

cls()
p("Aktualisierung abgeschlossen!")
p()
p("Neustart")
wait(tw = 3000)

payload("sd:/payload.bin")